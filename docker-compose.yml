version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: sql-browser-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
    env_file:
      - ./backend/.env
    volumes:
      - ./backend/logs:/app/logs
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/health', (r) => process.exit(r.statusCode === 200 ? 0 : 1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - sql-browser-network

  # Frontend (SvelteKit)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: sql-browser-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    env_file:
      - ./frontend/.env
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - sql-browser-network

  # NGINX Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: sql-browser-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
      - ./docker/nginx/logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - sql-browser-network

networks:
  sql-browser-network:
    driver: bridge
